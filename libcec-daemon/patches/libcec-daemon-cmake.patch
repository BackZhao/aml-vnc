From ac10d5b071e5eecfeb8ea2a2c1fb91d00b777c8e Mon Sep 17 00:00:00 2001
From: Daniel Joos <daniel@joosweb.de>
Date: Sun, 23 Mar 2014 16:09:43 +0100
Subject: [PATCH] Moved to CMake based build

---
 CMakeLists.txt            | 20 ++++++++++++++++++++
 cmake/FindCec.cmake       | 13 +++++++++++++
 cmake/FindLog4cplus.cmake | 24 ++++++++++++++++++++++++
 cmake/config.h.in         | 22 ++++++++++++++++++++++
 4 files changed, 79 insertions(+)
 create mode 100644 CMakeLists.txt
 create mode 100644 cmake/FindCec.cmake
 create mode 100644 cmake/FindLog4cplus.cmake
 create mode 100644 cmake/config.h.in

diff --git a/CMakeLists.txt b/CMakeLists.txt
new file mode 100644
index 0000000..59c0907
--- /dev/null
+++ b/CMakeLists.txt
@@ -0,0 +1,21 @@
+project(libcec-daemon)
+cmake_minimum_required(VERSION 2.8)
+
+set(CPACK_PACKAGE_NAME ${PROJECT_NAME})
+set(CPACK_PACKAGE_VERSION "0.9")
+
+set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
+set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)
+
+configure_file(${PROJECT_SOURCE_DIR}/cmake/config.h.in ${CMAKE_CURRENT_BINARY_DIR}/config.h)
+include_directories(${CMAKE_CURRENT_BINARY_DIR})
+
+find_package(Threads)
+find_package(Boost COMPONENTS thread system program_options chrono)
+find_package(Cec)
+find_package(Log4cplus)
+
+file(GLOB libcec-daemon_SOURCES ${PROJECT_SOURCE_DIR}/src/*cpp)
+add_executable(libcec-daemon ${libcec-daemon_SOURCES})
+target_link_libraries(libcec-daemon ${CMAKE_THREAD_LIBS_INIT} ${Boost_LIBRARIES} ${LOG4CPLUS_LIBRARIES} ${Cec_LIBRARIES} ${CMAKE_DL_LIBS})
+
diff --git a/cmake/FindCec.cmake b/cmake/FindCec.cmake
new file mode 100644
index 0000000..79106c5
--- /dev/null
+++ b/cmake/FindCec.cmake
@@ -0,0 +1,13 @@
+
+find_path(Cec_INCLUDE_DIR libcec/cec.h)
+
+find_library(Cec_LIBRARY NAMES cec)
+
+set(Cec_LIBRARIES ${Cec_LIBRARY})
+set(Cec_INCLUDE_DIRS ${Cec_INCLUDE_DIR})
+
+include(FindPackageHandleStandardArgs)
+
+find_package_handle_standard_args(Cec DEFAULT_MSG Cec_LIBRARY Cec_INCLUDE_DIR)
+mark_as_advanced(Cec Cec_INCLUDE_DIR Cec_LIBRARY)
+
diff --git a/cmake/FindLog4cplus.cmake b/cmake/FindLog4cplus.cmake
new file mode 100644
index 0000000..e2f0f4f
--- /dev/null
+++ b/cmake/FindLog4cplus.cmake
@@ -0,0 +1,24 @@
+# - Try to find Log4cplus
+# Once done this will define
+#  LOG4CPLUS_FOUND - System has Log4cplus
+#  LOG4CPLUS_INCLUDE_DIRS - The Log4cplus include directories
+#  LOG4CPLUS_LIBRARIES - The libraries needed to use Log4cplus
+
+
+find_path(LOG4CPLUS_INCLUDE_DIR log4cplus/config.hxx
+          PATH_SUFFIXES log4cplus )
+
+find_library(LOG4CPLUS_LIBRARY NAMES log4cplus
+             PATHS /usr)
+
+set(LOG4CPLUS_LIBRARIES ${LOG4CPLUS_LIBRARY} )
+set(LOG4CPLUS_INCLUDE_DIRS ${LOG4CPLUS_INCLUDE_DIR} )
+
+include(FindPackageHandleStandardArgs)
+# handle the QUIETLY and REQUIRED arguments and set LIBXML2_FOUND to TRUE
+# if all listed variables are TRUE
+find_package_handle_standard_args(Log4cplus  DEFAULT_MSG
+                                  LOG4CPLUS_LIBRARY LOG4CPLUS_INCLUDE_DIR)
+
+mark_as_advanced(LOG4CPLUS_INCLUDE_DIR LOG4CPLUS_LIBRARY )
+
diff --git a/cmake/config.h.in b/cmake/config.h.in
new file mode 100644
index 0000000..43be4fa
--- /dev/null
+++ b/cmake/config.h.in
@@ -0,0 +1,22 @@
+
+/* Name of package */
+#define PACKAGE "${CPACK_PACKAGE_NAME}"
+
+/* Define to the address where bug reports for this package should be sent. */
+#define PACKAGE_BUGREPORT ""
+
+/* Define to the full name of this package. */
+#define PACKAGE_NAME "${CPACK_PACKAGE_NAME}"
+
+/* Define to the full name and version of this package. */
+#define PACKAGE_STRING "${CPACK_PACKAGE_NAME} ${CPACK_PACKAGE_VERSION}"
+
+/* Define to the one symbol short name of this package. */
+#define PACKAGE_TARNAME "${CPACK_PACKAGE_NAME}"
+
+/* Define to the home page for this package. */
+#define PACKAGE_URL ""
+
+/* Define to the version of this package. */
+#define PACKAGE_VERSION "${CPACK_PACKAGE_VERSION}"
+
